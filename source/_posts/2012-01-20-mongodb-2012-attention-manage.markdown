---
layout: post
title: "MongoDB_2012 管理者から見た弱点と対策"
date: 2012-01-20 16:05
comments: true
categories: MongoDB
---

### プライマリダウン発生時 ###
#### 多数決原理 ####
レプリケーションは、primaryを定める処理のため、ダウンするマシン側が少数派でなくてはならない。
同時にダウンしてもよい台数を1台までとするなら、最低3台でレプリケーションすること。

####Journal（受け付けた書き込み操作の記録）の取り扱い####
プライマリDBのJournalがセカンダリに配布されるまでの間、情報をプライマリだけが保持している期間がある。


### ディスク領域管理 ###

#### updateを繰り返すとディスクスペースが膨らむ。 ####
updateによってドキュメントサイズが変化すると、情報の断片化によって未使用領域が増えていく。

#### ロックしてしまう操作 ####
下のような操作は、データベースをロックして実行する。

→量にもよるが、数時間、Read,Write不可能になる。

- インデックス（primaryはノンブロックだが、secondaryでロック）
- repair database
- データコンパクション

#### ロックせずにデータフラグメント対策をするには ####
下記の手順の紹介があった。

- replica setでMongoDBを運用
- 新規nodeを追加し、データを同期する。
- （この新規ノードには、断片化していないデータが集まる。）
- stepdown() コマンド発行。プライマリを引き継ぐ。（このとき数秒間、書き込みロックが発生。）


