<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[7korobi Blog]]></title>
  <link href="http://7korobi.github.com/atom.xml" rel="self"/>
  <link href="http://7korobi.github.com/"/>
  <updated>2012-09-19T19:18:09+09:00</updated>
  <id>http://7korobi.github.com/</id>
  <author>
    <name><![CDATA[ななころび]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[rubykaigi2012 Ruby on Rails 関連セッション]]></title>
    <link href="http://7korobi.github.com/blog/2012/09/18/session-ruby-on-rails/"/>
    <updated>2012-09-18T12:00:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2012/09/18/session-ruby-on-rails</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/sprk2012/sprk2012-cfp">札幌rubykaigi2012</a></p>

<h1>Rails3 レシピブック外伝</h1>

<p><a href="http://www.ustream.tv/recorded/25419544">動画</a></p>

<h1>RubyやLinux対応を積極的に進めるマイクロソフトのオープンソース&lt;3(LOVE)戦略</h1>

<p><a href="http://www.ustream.tv/recorded/25394761">動画</a></p>

<p>Windows 64bit用に、artonさん作のプラットフォーム「能楽堂」の紹介がある。イチから作り、IISとオサラバしたとのこと。</p>

<h1>Squaleの裏側</h1>

<p>SqualeというPAASの内部構造
<a href="http://www.ustream.tv/recorded/25395947">動画</a></p>

<ul>
<li>Ruby Sinatra Rails publish &amp; deploy.</li>
<li>サーバーセットアップを忘れてコードに専念！</li>
<li>ライトユーザーの敷居を下げるのが目標</li>
</ul>


<p>Amazon EC2 instance上にサーバー群を構成している。
EC2 Instance を仮想コンテナで区切っている。
(メモリを多く使うので、M2 large などを使う。）</p>

<h2>構成</h2>

<ul>
<li>Nginx</li>
<li>Unicorn</li>
<li>SSHD</li>
<li>Supervisord</li>
<li>paperboy-sqale</li>
</ul>


<h2>Containers</h2>

<ul>
<li>made by LXC</li>
<li>仮想環境で動く（Heroku Dynos と同じ）</li>
<li>監視は、プロセスの動作しか見ていない（今後、port監視など強化したい。）</li>
</ul>


<h2>セキュリティ</h2>

<ul>
<li>tcp port bind を制限し、一般Userからは仕掛けられなくする。</li>
<li>utp port はそのまま。</li>
<li>linux kernel patch   1024 → 65535</li>
</ul>


<h2>WebProxy</h2>

<p><a href="http://bit.ly/UHbHlb">技術情報</a></p>

<ul>
<li>redis 動作nginx のポート番号を管理</li>
<li>nginx ドメイン名からポート番号を引き当てる</li>
<li>location をコンテナの状況で分岐処理する。</li>
</ul>


<h2>failover.lua</h2>

<ul>
<li>コンテナ停止時、502が発生するので、フェイルオーバー処理に移る</li>
<li>ダウンを検知したので、ダウンコンテナとして把握しておく</li>
</ul>


<h2>dynamic-proxy.lua</h2>

<ul>
<li>ダウンしたコンテナには接続を振らない</li>
</ul>


<h2>SSH Router</h2>

<p><a href="http://github.com/mizzy/openssh-script-auth">技術情報</a></p>

<ul>
<li>git  -> Git Server</li>
<li>sftp -> File Server</li>
<li>ssh  -> Container</li>
</ul>


<p>このルーティングを実現する仕組み。</p>

<ul>
<li>AuthorizedKeysScript</li>
<li>適切にサーバー名、パス情報を修正して実行</li>
<li>鍵情報の実態はMySQLで管理</li>
</ul>


<h2>Deploy Servers</h2>

<p><a href="http://bit.ly/NBbj9F">技術情報</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rubykaigi2012 Ruby + iOS = Super awesome!]]></title>
    <link href="http://7korobi.github.com/blog/2012/09/18/session-platform/"/>
    <updated>2012-09-18T12:00:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2012/09/18/session-platform</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/sprk2012/sprk2012-cfp">札幌rubykaigi2012</a></p>

<p><a href="http://www.ustream.tv/recorded/25396312">動画</a></p>

<h2>mruby</h2>

<p>組み込み環境用ruby実装。</p>

<h3>特徴</h3>

<ul>
<li>省メモリ</li>
<li>省ストレージ</li>
<li>非POSIX, only C99 → ブートローダーなどの立場で動作可能</li>
<li>CRuby 拡張ライブラリと互換がない。（rubygems が使えない）</li>
</ul>


<h3>マイルストーン</h3>

<ul>
<li>fiber ゲーム業界が欲しい（イベントドリブン書きづらいので）</li>
<li>デバッグについて

<ul>
<li>エミュレーターなど開発環境でだけは、リッチな情報が欲しい。</li>
<li>mobirubyでは変数レポートなどしたい。</li>
</ul>
</li>
<li>コミュニケーションは、githubのみ（ML用意しない）</li>
<li>多様性（しかし）

<ul>
<li>JRuby Rubinius CRuby でもGemが使えるように、エクステンションの労力が少なくしようという流れの中にある。</li>
<li>extension API では、mrubyの要求を満たさない。</li>
<li>JRubyなどが extension互換性については頑張っていることと、CRubyが今後のメインストリームの位置にあればよい。</li>
<li>mruby gemsを別に作る提案もある。フレームワークを決めて、extensionを一気にコンパイルしてくれる仕組み。</li>
<li>が、今はまだ検討の段階にある。</li>
</ul>
</li>
</ul>


<h2>MobiRuby</h2>

<p>iPhoneアプリケーションをRubyで書く
http://mobiruby.org/</p>

<h3>目標</h3>

<ul>
<li>mruby(組み込みruby) を使ったruby開発。</li>
<li>rubyの力をiOS/androidに提供する。</li>
<li>最終的にはラッピングAPIの提供まで視野に入れる。</li>
<li>ダイレクトAPIの提供を残し、必要なら細かい操作が可能にする。</li>
</ul>


<h3>来歴</h3>

<ul>
<li>2012/03   きっかけ</li>
<li>2012/06   スタートアップ</li>
<li>2012/09   MAC環境α（samegame）人によっては動作しないらしい？</li>
</ul>


<h3>現状</h3>

<ul>
<li>iOS と Ruby が大好き、という人専用（現状）</li>
<li>128bit 整数（C long long）サポートがまだ</li>
<li>デバッグ情報を出す機能がまだ</li>
<li>appleの審査を通すため、eval、define_methodなどの動的機能はない。</li>
<li>ObjC に機能がないため、特異メソッド定義ができない。</li>
</ul>


<h3>RoadMap</h3>

<ul>
<li>Fix BUG</li>
<li>cocoa bridge 完了</li>
<li>Documentation</li>
<li>Packaging</li>
</ul>


<h3>構成</h3>

<ul>
<li>iOS

<ul>
<li>mruby

<ul>
<li>mruby-cfunc Cブリッジ

<ul>
<li>mruby-common</li>
<li>mruby-cocoa Cocoaブリッジ</li>
<li>mruby-ios iOS特化機能、iOSブートストラップ。将来はラッパライブラリ</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>mruby-common</h3>

<ul>
<li>iPhone、Android 共通機能</li>
<li>POSIX、ランダムなど</li>
</ul>


<h3>mruby-cocoa Cocoaブリッジ</h3>

<ul>
<li>cocoaの動的支援（文字列リクエストでクラスのポインタを取得、など）を使っている。</li>
<li>UIウィンドウからインスタンスを作ってVisibleにする。など</li>
<li>ObjC-Class &lt; Ruby-Class &lt; ObjC-Class</li>
<li>ruby からの呼び出時は、リフレクションする。

<ul>
<li>define で定義すると、ruby、objC 両方からコール可能な定義になる</li>
<li>Class#_method で、rubyからobjCのメソッドを呼ぶ。</li>
</ul>
</li>
<li>ObjC object と可換な Ruby object</li>
<li>今バージョンはメモリリークがある。（リセット連打で落ちたりする）</li>
<li>メモリ管理 ObjCメモリ管理を Swizzle して、実態はmrubyの管理にしている。

<ul>
<li>重い！全メモリアクセスをフックするため</li>
</ul>
</li>
<li>マルチスレッド非対応。複数のVMを同アプリで起動し、スレッドのように扱うアイデアで検討中</li>
</ul>


<h3>mruby アプリケーション</h3>

<ul>
<li>app.rb

<ul>
<li>hello.rb</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rubykaigi2012 ruby2.0とその先]]></title>
    <link href="http://7korobi.github.com/blog/2012/09/18/session-language/"/>
    <updated>2012-09-18T12:00:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2012/09/18/session-language</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/sprk2012/sprk2012-cfp">札幌rubykaigi2012</a></p>

<h1>Towards Ruby 2.0: Progress of VM Internals</h1>

<p><a href="http://www.ustream.tv/recorded/25419520">動画</a></p>

<h2>履歴と予定</h2>

<ul>
<li>2012-08    Big-feature freeze</li>
<li>2012-10    Feature freeze</li>
<li>2013-02-24 Ruby 2.0 Release 20th anniversary</li>
</ul>


<h2>Policy 開発方針</h2>

<p>ruby2.0の新機能をどのように実装したか。</p>

<ul>
<li>Compatibility</li>
<li>Compatibility</li>
<li>Compatibility</li>
<li>Usability</li>
<li>Performance</li>
</ul>


<h2>ruby2.0でやったこと</h2>

<h3>Module#prepend</h3>

<ul>
<li>従来、alias_method_chainでダーティ・ハックしていたことを実現するためのmethod.</li>
<li>around (before-each after-each) など実現しやすい。</li>
<li>prependするモジュールがサブクラス側の扱い。Object#extend はクラスの定義物より優先で処理されるが、同等の順序となる。</li>
</ul>


<h3>Flonum(64bit)</h3>

<p>Floatがimmediateでないため、GCコストが莫大になる問題が発生する。
そこで、64bit向けに、IEEE754演算をimmutableオブジェクトとして提供する。
ただし、拡張ライブラリはリビルドしないと、VALUEがずれる。</p>

<ul>
<li><p>VALUE(インスタンスのメモリ上の共用体)</p>

<ul>
<li>Fixnum</li>
<li>Flonum <em>追加</em></li>
<li>Symbol</li>
<li>Qfalse</li>
<li>Qnil</li>
<li>Qtrue</li>
<li>Qundef</li>
<li>Pointer</li>
</ul>
</li>
<li><p>Flonum &lt; IEEE754 2bit落とそう</p>

<ul>
<li>IEEE754 b52-b62 with-in 768 のみFlonumと扱う。</li>
<li>rotate 3bit + 2bit mask</li>
</ul>
</li>
<li>Benchmarkはほぼ一定。多少遅い部分をチューンする</li>
</ul>


<h3>backtrace API</h3>

<ul>
<li>caller_locations

<ul>
<li>lineno</li>
<li>path</li>
<li>etc&#8230;</li>
<li>例外を沢山だすプログラムが高速化する</li>
</ul>
</li>
</ul>


<h3>set_trace_func</h3>

<ul>
<li>TracePoint API

<ul>
<li>メソッド呼び出しだけInvokeする、などの処理が可能。</li>
</ul>
</li>
<li>New C API</li>
</ul>


<h3>Controllable asynchronous Interrupts</h3>

<ul>
<li>終了処理の最中でも非同期割り込みは入ってきてしまうが、それでは困る処理のための機能。</li>
<li>Thread.control_interrupt(TimeoutError => :on_blocking) do … end</li>
</ul>


<h3>その他の変更</h3>

<ul>
<li>finish frame を取り除きました。</li>
<li>allocation function を直接に変更、高速化しました。</li>
<li>VM最適化：メソッド呼び出しコストが大きいので、最適化したい</li>
<li>VMデータ構造訂正</li>
</ul>


<h3>将来やりたいこと</h3>

<ul>
<li>C APIs for Incomplete Feature</li>
</ul>


<p>あきらめたこと</p>

<ul>
<li>MVM</li>
</ul>


<h1>Purely functional programming in Ruby</h1>

<p><a href="http://www.ustream.tv/recorded/25412526">動画</a></p>

<p>副作用を用いないプログラミング
関数プログラミングをすると、自然に永続データ構造になる。</p>

<ul>
<li>短命データ構造 変更をくわえると前のデータが失われるデータ構造</li>
<li>永続データ構造 変更前のバージョンのデータが保存されるデータ構造

<ul>
<li>本来、並列動作に適している。（本セッションでの紹介内容は、スレッドセーフにしていない。）</li>
<li>テストしやすい</li>
</ul>
</li>
</ul>


<h2>関数プログラミングがしないこと</h2>

<ul>
<li>変数の再代入</li>
<li>オブジェクトの状態変更</li>
<li>入出力</li>
</ul>


<h2>リスト</h2>

<p>Arrayは副作用を避けられないので、線形リストを実装しよう。</p>

<ul>
<li>while は副作用に依存する。</li>
<li>Enumerable#map 内部ではpushの副作用を使う。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="no">List</span><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="o">]</span> <span class="o">-</span> <span class="n">head</span><span class="p">:</span> <span class="mi">1</span> <span class="n">tail</span><span class="p">:</span> <span class="no">List</span><span class="o">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="o">]</span>
</span><span class='line'>   <span class="no">List</span><span class="o">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="o">]</span> <span class="o">-</span> <span class="n">head</span><span class="p">:</span> <span class="mi">2</span> <span class="n">tail</span><span class="p">:</span> <span class="no">List</span><span class="o">[</span><span class="mi">3</span><span class="o">]</span>
</span><span class='line'>     <span class="no">List</span><span class="o">[</span><span class="mi">3</span><span class="o">]</span> <span class="o">-</span> <span class="n">head</span><span class="p">:</span> <span class="mi">3</span> <span class="n">tail</span><span class="p">:</span> <span class="kp">nil</span>
</span><span class='line'>      <span class="no">List</span><span class="o">[]</span> <span class="o">-</span> <span class="kp">nil</span>
</span></code></pre></td></tr></table></div></figure>


<h2>末尾再帰</h2>

<p>引数に情報をうまく蓄積するようにするテクニック。
スタックの消費を抑え、SystemStackError(!)を避けられます。
コンパイルオプションで最適化が有効になる。（Ruby2.0ではデフォルトになるかも？）</p>

<ul>
<li>末尾再帰は空間効率が良い。大きい入力に有利。</li>
<li>末尾再帰でないコードは時間効率がよい。小さい入力に有利</li>
<li>ただし、計算量はどちらもO(n)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Cons</span><span class="o">&lt;</span> <span class="no">List</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">length</span>
</span><span class='line'>    <span class="n">tail</span><span class="o">.</span><span class="n">length</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="k">def</span> <span class="nc">Nil</span><span class="o">.</span><span class="nf">length</span>
</span><span class='line'>  <span class="mi">0</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">⇩</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">List</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">length</span>
</span><span class='line'>    <span class="n">_length</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Cons</span> <span class="o">&lt;</span> <span class="no">List</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">_length</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>    <span class="n">tail</span><span class="o">.</span><span class="n">_length</span><span class="p">(</span><span class="n">n</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="k">def</span> <span class="nc">Nil</span><span class="o">.</span><span class="nf">_length</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>  <span class="n">n</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Listを組み込みオブジェクトにする取り組み(#6242)</h2>

<ul>
<li>※ マルチスレッド動作への対応はできていない状況です。</li>
<li>右結合の演算子 ::: で、カッコ無しで書く。</li>
<li>0 ::: S[1,2,3] => S[0,1,2,3]</li>
<li>0 ::: 1 ::: 2 ::: 3</li>
</ul>


<h3>Lazy evaluation</h3>

<ul>
<li>必要になるまで式の評価を遅延させる。</li>
<li>Memoization

<ul>
<li>何度実行しても一回しか評価されない。</li>
<li>副作用がないからそれで問題ない。</li>
</ul>
</li>
</ul>


<h3>Immutable</h3>

<ul>
<li>map</li>
<li>Queue</li>
<li>Deque</li>
<li>Promise

<ul>
<li>lazy

<ul>
<li>lazy(x) = delay(x.force)</li>
<li>再帰してもスタックが溢れない</li>
</ul>
</li>
</ul>
</li>
<li>Stream

<ul>
<li>遅延リスト（必要とされるまでリストの要素がない）</li>
</ul>
</li>
</ul>


<h3>Benchmark</h3>

<ul>
<li>ListはArrayの7.4倍遅い！</li>
<li>繰り返しdupするようなことにおすすめ。</li>
</ul>


<h1>Pattern Matching in Ruby</h1>

<p><a href="http://www.ustream.tv/recorded/25413389">動画</a></p>

<h2>パターンマッチとは</h2>

<p>多重代入＋α</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">多重代入</span>
</span><span class='line'><span class="n">a</span><span class="p">,</span> <span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">)</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="o">]]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">パターンマッチ</span>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">]</span> <span class="n">match</span> <span class="p">{</span>
</span><span class='line'><span class="k">case</span> <span class="o">[</span><span class="n">a</span><span class="p">,</span> <span class="o">[</span><span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="o">]]</span> <span class="o">=&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>なぜ多重代入ではいけない？</p>

<h2>多重代入の問題点</h2>

<ul>
<li>分解機能が弱い Arrayに限定されてしまう。</li>
<li>照合機能が弱い 個数の確認ができない。</li>
<li>代入機能がない 途中の値（[2,3]の部分）を代入できない</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">Array</span><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="o">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="o">]]</span> <span class="n">match</span>
</span><span class='line'><span class="k">case</span> <span class="nb">Array</span><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="o">[</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="o">]]</span> <span class="o">=&gt;</span> <span class="nb">Array</span><span class="o">[</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="no">List</span><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="o">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="o">]]</span> <span class="n">match</span>
</span><span class='line'><span class="k">case</span> <span class="no">List</span><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="o">[</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="o">]]</span> <span class="o">=&gt;</span> <span class="no">List</span><span class="o">[</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>分解の例</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Email</span><span class="c1">#unapply</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;foo@example.com&quot;</span> <span class="n">match</span>
</span><span class='line'><span class="k">case</span> <span class="no">Email</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">domain</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="s2">&quot;foo&quot;</span><span class="p">,</span><span class="s2">&quot;example.com&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;2012-09-15&quot;</span> <span class="n">match</span>
</span><span class='line'><span class="k">case</span> <span class="sr">/(¥d+)-(¥d+)-(¥d+)/</span> <span class="o">=&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>照合の例</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">Array</span><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="nb">Array</span><span class="o">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="o">]]</span> <span class="n">match</span> <span class="p">{</span>
</span><span class='line'><span class="k">case</span> <span class="nb">Array</span><span class="o">[</span><span class="n">a</span><span class="p">,</span><span class="o">[</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="o">]</span><span class="p">,</span><span class="n">d</span><span class="o">]</span>   <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="k">case</span> <span class="nb">Array</span><span class="o">[</span><span class="n">a</span><span class="p">,</span><span class="no">List</span><span class="o">[</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="o">]]</span> <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="k">case</span> <span class="nb">Array</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="o">[</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="o">]]</span>     <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="sr">//</span> <span class="no">MatchError</span>
</span></code></pre></td></tr></table></div></figure>


<h3>代入の例</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">Array</span><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="nb">Array</span><span class="o">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="o">]]</span> <span class="n">match</span> <span class="p">{</span>
</span><span class='line'><span class="k">case</span> <span class="nb">Array</span><span class="o">[</span><span class="n">a</span><span class="p">,</span><span class="n">d</span> <span class="err">@</span> <span class="nb">Array</span><span class="o">[</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="o">]]</span> <span class="o">=&gt;</span> <span class="nb">Array</span><span class="o">[</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="n">d</span><span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/k-tsj/pattern-match">Rubyで実際に書く方法</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">pattern</span><span class="o">-</span><span class="n">match</span>
</span></code></pre></td></tr></table></div></figure>


<p>パターンマッチは非常に強力
- ログ分析
- 正規表現のかわり
- 他にもユースケースは沢山！</p>

<h3>分解(Deconstructable)</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Regexp</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">PatternMatch</span><span class="o">::</span><span class="no">Deconstructable</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">deconstruct</span><span class="p">(</span><span class="n">val</span><span class="p">)</span>
</span><span class='line'>    <span class="n">m</span> <span class="o">=</span> <span class="no">Regexp</span><span class="o">.</span><span class="n">new</span>
</span></code></pre></td></tr></table></div></figure>


<p>  with(Array.(a,b))
- Deconstructor のクラスに、Deconstructorをinclude
- Array.deconstruct(val)</p>

<p>照合/代入の例</p>

<p>Destructuring Assignment
Duck typing style</p>

<p>利用例
- テキスト処理（エラー処理もある）
- ツリーノード処理（HTML,XMLなど）</p>

<p>デザイン（文法）
- match式を新設
- case式を拡張
- メソッド引数、ブロック引数（文化的にスコシチガウ）</p>

<p>デザイン（分解）
- コンストラクトメソッド（コンテキストに応じた分解）
- コンストラクタ引数を適切に変える</p>

<p>デザイン（照合）
- 正規表現的マッチ
   <em>i, Fixnum, </em>j  が動けば…
- Mathematicaではやっている。</p>

<pre><code>Replace[{1,2,3,4,5}, {a___, b_, Shortest[c___]}]
</code></pre>

<ul>
<li>Setなど、正規形をもたないオブジェクトに対する照合は？</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rubykaigi2012 Ruby on Rails The Bad Parts]]></title>
    <link href="http://7korobi.github.com/blog/2012/09/18/session-dci/"/>
    <updated>2012-09-18T12:00:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2012/09/18/session-dci</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/sprk2012/sprk2012-cfp">札幌rubykaigi2012</a></p>

<p><a href="http://www.ustream.tv/recorded/25420080">動画</a></p>

<p>railsの理想のひとつにclean code（整頓されたプログラム）があります。
けど現実のプロダクトでは難しいよね。</p>

<p>今のRailsは、足りない！</p>

<h3>Rails問題点 ⇨ 解決案</h3>

<ul>
<li>Helperが大きすぎる ⇨ Decolator</li>
<li>partialが多すぎる  ⇨ cells</li>
<li>Modelが太り過ぎる  ⇨ ライブラリ化、Acivity Layer</li>
</ul>


<p>こうした整理を行った手法を、Data-Context-Interaction(DCI)と呼ぶ。</p>

<h3>Helperは我々を助けてくれない</h3>

<ul>
<li>viewは、それぞれ独立でいるのが理想</li>
<li>共通のHelperとか…</li>
<li>Decolator を使おう！

<ul>
<li><a href="https://github.com/jcasimir/draper">Draper</a>

<ul>
<li>メソッドが変わってしまう</li>
<li>associated objects に対しても自動的にいける</li>
</ul>
</li>
<li><a href="https://github.com/amatsuda/active_decorator">ActiveDecorator</a></li>
</ul>
</li>
</ul>


<h3>partialはpartsではない</h3>

<p><a href="https://github.com/apotonick/cells">cells</a></p>

<ul>
<li>railsにview componentを提供するもの</li>
<li>mini controller、partial view で作る。</li>
</ul>


<p>app/cells/
  sidebar_cell.rb
  sidebar/recent_tags.html.haml</p>

<p>= render_cell :sidebar, :recent_tags
= rencer_cell :answers, :index, @questions</p>

<h3>modelになるには太り過ぎ</h3>

<ul>
<li>とあるモデルが500ライン以上！</li>
<li>アプリケーションのために小さなライブラリを作ろう</li>
<li>例：taggable とか</li>
</ul>


<h4>Activity Layer</h4>

<p>ユーザーアクティビティの単位でクラス化して、module includeする。</p>

<ul>
<li>複数のモデルが絡むロジックをどこに置くか？</li>
<li>class My::AnswerAcceptingsController#update</li>
<li>class AcceptAnswerActivity#do_process</li>
</ul>


<p>Common Point of Common Pitfalls
アプリケーションロジックの適切な置き場所を、railsが提供していないという問題。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TRPG on 人狼議事]]></title>
    <link href="http://7korobi.github.com/blog/2012/02/26/trpg-on-giji/"/>
    <updated>2012-02-26T13:38:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2012/02/26/trpg-on-giji</id>
    <content type="html"><![CDATA[<h2>目的</h2>

<p>人狼議事のサイト上で、TRPGを遊べるようにする。
TRPGには、GMとプレイヤーがシナリオに参加し、集まったキャラクターたちが、次々とシーンを進んでゆき、シナリオを達成する。
人狼ゲームの考え方と対照すると、下のようになる。</p>

<ul>
<li><p>村＝シナリオ、村立て＝GM</p></li>
<li><p>１日＝１シーン</p></li>
</ul>


<h2>シナリオ</h2>

<p>シナリオはそれぞれタイトル、説明書きを持つ。
シナリオにはシーンが追加されていく。</p>

<h4>進行中</h4>

<p>進行中のシナリオは、下の特徴を持つ。</p>

<ul>
<li>独り言、内緒話、秘密シーンの閲覧に制限がある。</li>
</ul>


<h4>終了</h4>

<p>すべてのシーンが終了すると、シナリオも終了する。また、シナリオを終了すると、すべてのシーンが終了する。
終了したシナリオは下の特徴を持つ。</p>

<ul>
<li>シーン作成ができない。</li>
<li>すべての発言、シーンでの秘密が公開される。</li>
</ul>


<h2>シーン</h2>

<p>シーンは作成した順に並び、それぞれがタイトルを持つ。
シーンにはGMが設定する、下の４種類のタイプがある。</p>

<p>開始から２４時間が過ぎると、このシーンはCLOSEに変化する。</p>

<h4>OPEN</h4>

<p>公開。
プロローグを含む（プロローグでは参加操作が可能）。
各キャラクターは自分の操作か、GMの操作でこのシーンに参加してよい。</p>

<h4>INVITE</h4>

<p>招待。
各キャラクターはGMの操作でこのシーンに参加してよい。</p>

<h4>SECRET</h4>

<p>秘密。
各キャラクターはGMの操作でこのシーンに参加してよい。
発言内容は、参加中のキャラクターにのみ閲覧可能。</p>

<h4>CLOSE</h4>

<p>終了。
キャラクターは参加できない。
キャラクターは独り言のみ投稿できる。</p>

<h2>発言</h2>

<p>キャラクターやGMが投稿する発言は、下記の種類がある。</p>

<ul>
<li><p>発言（コール）</p></li>
<li><p>発言（キャラクターロール）</p></li>
<li><p>内緒話</p></li>
<li><p>独り言</p></li>
<li><p>GM投稿</p></li>
<li><p>GM独話</p></li>
<li><p>管理人投稿</p></li>
<li><p>メモ（GM）</p></li>
<li><p>メモ（プレイヤー発言）</p></li>
</ul>


<h2>キャラクター</h2>

<p>参加したプレイヤーは、ひとつのキャラクターを持つ。
キャラクターはそれぞれ、ひとつのシーンに参加中となる。</p>

<p>キャラクターにはそれぞれ、下の操作が可能。</p>

<ul>
<li><p>発言（コール）</p></li>
<li><p>発言（キャラクターロール）</p></li>
<li><p>内緒話</p></li>
<li><p>独り言</p></li>
<li><p>メモ（プレイヤー発言）</p></li>
<li><p>現在より後の、公開シーンへの移動</p></li>
</ul>


<h2>GM</h2>

<p>村を建てたプレイヤーは、その村のゲームマスターとなる。
ゲームマスターはすべてのシーンで、下の操作が可能。</p>

<ul>
<li><p>GM投稿（ＮＰＣ発言、システム、状況ロール などに使う。）</p></li>
<li><p>GM独話（キャラクターに秘密でサイコロを振る、などの行為に使う。）</p></li>
<li><p>メモ（GM）</p></li>
<li><p>現在より後の、終了以外のシーンへの、指定キャラクターの移動</p></li>
<li><p>新しいシーンを作り、タイトルをつける。</p></li>
<li><p>シーンの編集</p></li>
<li><p>シナリオの編集</p></li>
<li><p>シナリオの終了</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails2_remember]]></title>
    <link href="http://7korobi.github.com/blog/2012/01/26/rails2-remember/"/>
    <updated>2012-01-26T13:23:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2012/01/26/rails2-remember</id>
    <content type="html"><![CDATA[<p>思い出したほうがよさそうな、Rails2の機能を三つほど。</p>

<p>・<a href="http://apidock.com/rails/Module/delegate">delegate</a>
・<a href="http://apidock.com/rails/ActiveSupport/Memoizable/memoize">memoize</a>
・<a href="http://apidock.com/rails/ActionDispatch/Rescue/rescue_from">rescue_from</a></p>

<h2>delegate</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:b</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="vi">@b</span> <span class="o">=</span> <span class="no">OpenStruct</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
</span><span class='line'>      <span class="n">foo</span><span class="p">:</span> <span class="s1">&#39;b.foo&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="n">bar</span><span class="p">:</span> <span class="s1">&#39;b.bar&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="n">baz</span><span class="p">:</span> <span class="s1">&#39;b.baz&#39;</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">delegate</span> <span class="ss">:foo</span><span class="p">,</span> <span class="ss">:to</span><span class="o">=&gt;</span><span class="ss">:b</span>
</span><span class='line'>  <span class="n">delegate</span> <span class="ss">:bar</span><span class="p">,</span> <span class="ss">:to</span><span class="o">=&gt;</span><span class="ss">:b</span><span class="p">,</span> <span class="ss">:prefix</span><span class="o">=&gt;</span><span class="kp">true</span>
</span><span class='line'>  <span class="n">delegate</span> <span class="ss">:baz</span><span class="p">,</span> <span class="ss">:to</span><span class="o">=&gt;</span><span class="ss">:b</span><span class="p">,</span> <span class="ss">:prefix</span><span class="o">=&gt;</span><span class="s2">&quot;target&quot;</span>
</span><span class='line'>  <span class="n">delegate</span> <span class="ss">:quod</span><span class="p">,</span> <span class="ss">:to</span><span class="o">=&gt;</span><span class="p">:</span><span class="vi">@b</span><span class="p">,</span> <span class="ss">:prefix</span><span class="o">=&gt;</span><span class="s2">&quot;target&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># ArgumentError: Can only automatically set the delegation prefix when delegating to a method.</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="n">A</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">foo</span>        <span class="c1"># =&gt; b.foo</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">b_bar</span>      <span class="c1"># =&gt; b.bar</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">target_baz</span> <span class="c1"># =&gt; b.baz</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">target_quod</span> <span class="c1"># NoMethodError: undefined method `target_quod&#39; for ...</span>
</span></code></pre></td></tr></table></div></figure>


<h2>memoize</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Memoizable</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;a.foo exec!&#39;</span>
</span><span class='line'>    <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">memoize</span> <span class="ss">:foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="n">A</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">foo</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>      <span class="c1"># a.foo exec! =&gt; 3</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">foo</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>      <span class="c1">#             =&gt; 3</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">foo</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="kp">true</span><span class="p">)</span> <span class="c1"># a.foo exec! =&gt; 3</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">foo</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>      <span class="c1"># a.foo exec! =&gt; 4</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">foo</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>      <span class="c1">#             =&gt; 4</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">instance_variable_get</span><span class="p">(:</span><span class="vi">@_memoized_foo</span><span class="p">)</span> <span class="c1"># {[1,2] =&gt; 3, [2,2] =&gt; 4}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>rescue_from</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Rescuable</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">FetchException</span> <span class="o">&lt;</span> <span class="no">RuntimeError</span><span class="p">;</span> <span class="k">end</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">StoreException</span> <span class="o">&lt;</span> <span class="no">RuntimeError</span><span class="p">;</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">rescue_from</span> <span class="no">FetchException</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span> <span class="vi">@error</span> <span class="o">=</span> <span class="s2">&quot;取得失敗: </span><span class="si">#{</span><span class="n">e</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">end</span>
</span><span class='line'>  <span class="n">rescue_from</span> <span class="no">StoreException</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span> <span class="vi">@error</span> <span class="o">=</span> <span class="s2">&quot;保存失敗: </span><span class="si">#{</span><span class="n">e</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">fetch</span>
</span><span class='line'>    <span class="k">raise</span> <span class="no">FetchException</span> <span class="k">if</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">store</span>
</span><span class='line'>    <span class="k">raise</span> <span class="no">StoreException</span> <span class="k">if</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">execute</span>
</span><span class='line'>    <span class="n">fetch</span>
</span><span class='line'>    <span class="n">store</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="no">Exception</span> <span class="o">=&gt;</span> <span class="n">error</span>
</span><span class='line'>    <span class="n">rescue_with_handler</span><span class="p">(</span><span class="n">error</span><span class="p">)</span> <span class="p">?</span> <span class="vi">@error</span> <span class="p">:</span> <span class="k">raise</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">B</span> <span class="o">&lt;</span> <span class="n">A</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">StoreException</span> <span class="o">&lt;</span> <span class="no">RuntimeError</span><span class="p">;</span> <span class="k">end</span>
</span><span class='line'>  <span class="n">rescue_from</span> <span class="no">StoreException</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span> <span class="vi">@error</span> <span class="o">=</span> <span class="s2">&quot;保存失敗: </span><span class="si">#{</span><span class="n">e</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">store</span>
</span><span class='line'>    <span class="k">raise</span> <span class="no">StoreException</span> <span class="k">if</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="n">A</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">execute</span> <span class="c1"># =&gt; たまに &quot;取得失敗: A::FetchException&quot;</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">execute</span> <span class="c1"># =&gt; たまに &quot;保存失敗: A::FetchException&quot;</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="n">B</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">b</span><span class="o">.</span><span class="n">execute</span> <span class="c1"># =&gt; たまに &quot;取得失敗: A::FetchException&quot;</span>
</span><span class='line'><span class="n">b</span><span class="o">.</span><span class="n">execute</span> <span class="c1"># =&gt; たまに &quot;保存失敗: B::FetchException&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[他PCからMySQLへ繋ぐ権限]]></title>
    <link href="http://7korobi.github.com/blog/2012/01/26/grant/"/>
    <updated>2012-01-26T10:21:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2012/01/26/grant</id>
    <content type="html"><![CDATA[<p>こういったメッセージが出た場合、denyされている(denied)ので権限を付与しないと動作しない。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&gt;&gt;</span> <span class="no">Model</span>
</span><span class='line'><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">StatementInvalid</span><span class="p">:</span>
</span><span class='line'>  <span class="no">Mysql</span><span class="o">::</span><span class="no">Error</span><span class="p">:</span>
</span><span class='line'>    <span class="no">SELECT</span> <span class="n">command</span> <span class="n">denied</span>
</span><span class='line'>      <span class="n">to</span> <span class="n">user</span> <span class="s1">&#39;root&#39;</span><span class="err">@</span><span class="o">&lt;</span><span class="n">hostname</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="k">for</span> <span class="n">table</span> <span class="o">&lt;</span><span class="n">models</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="p">:</span> <span class="no">SHOW</span> <span class="no">FIELDS</span> <span class="no">FROM</span> <span class="o">&lt;</span><span class="n">models</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>まずは状況確認から。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% mysql -h &lt;db_addr&gt; -u root -p
</span><span class='line'>Enter password:
</span><span class='line'>
</span><span class='line'>mysql&gt; show grants <span class="k">for </span>root@&lt;hostname&gt;;
</span><span class='line'>ERROR 1141 <span class="o">(</span>42000<span class="o">)</span>:
</span><span class='line'>  There is no such grant defined
</span><span class='line'>    <span class="k">for </span>user <span class="s1">&#39;root&#39;</span> on host &lt;hostname&gt;
</span></code></pre></td></tr></table></div></figure>


<p>他の設定を参考にしてみる。 all privileges でいいだろう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql&gt; show grants;
</span><span class='line'>+---------------------------------------------------------------------+
</span><span class='line'>| Grants <span class="k">for </span>root@localhost                                           |
</span><span class='line'>+---------------------------------------------------------------------+
</span><span class='line'>| GRANT ALL PRIVILEGES ON *.* TO <span class="s1">&#39;root&#39;</span>@<span class="s1">&#39;localhost&#39;</span> WITH GRANT OPTION |
</span><span class='line'>+---------------------------------------------------------------------+
</span><span class='line'>1 row in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意：このとき、することは２つある。</p>

<ul>
<li>ユーザーに権限を与える操作。</li>
<li>設定をデータベースに反映する操作。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">grant</span> <span class="k">all</span> <span class="n">privileges</span>
</span><span class='line'>         <span class="k">on</span> <span class="o">*</span><span class="p">.</span><span class="o">*</span> <span class="k">to</span> <span class="n">root</span><span class="o">@&lt;</span><span class="n">hostname</span><span class="o">&gt;</span>
</span><span class='line'>         <span class="n">identified</span> <span class="k">by</span> <span class="s1">&#39;&lt;PASSWORD&gt;&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="n">flush</span> <span class="n">privileges</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>そして、接続テスト</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="o">%</span> <span class="n">mysql</span> <span class="o">-</span><span class="n">h</span> <span class="o">&lt;</span><span class="n">db_addr</span><span class="o">&gt;</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="o">-</span><span class="n">p</span>
</span><span class='line'><span class="n">Enter</span> <span class="n">password</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">show</span> <span class="k">databases</span><span class="p">;</span>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">use</span> <span class="o">&lt;</span><span class="n">database_name</span><span class="o">&gt;</span><span class="p">;</span>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="o">&lt;</span><span class="n">models</span><span class="o">&gt;</span> <span class="k">limit</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB,2012 ハードウェアサイズ]]></title>
    <link href="http://7korobi.github.com/blog/2012/01/20/mongodb-2012-size/"/>
    <updated>2012-01-20T16:05:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2012/01/20/mongodb-2012-size</id>
    <content type="html"><![CDATA[<h3>Disk IO</h3>

<p>ディスクの容量はあまり重要ではなく、IO速度を考えるべき。
DDコマンドなどで、ディスクIOスピードを計測しておく。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>dd <span class="k">if</span><span class="o">=</span>/dev/zero <span class="nv">of</span><span class="o">=</span>zero.dat <span class="nv">bs</span><span class="o">=</span>1 <span class="nv">count</span><span class="o">=</span>1000000
</span><span class='line'>1000000+0 records in
</span><span class='line'>1000000+0 records out
</span><span class='line'>1000000 bytes <span class="o">(</span>1.0 MB<span class="o">)</span> copied, 1.72607 seconds, 579 kB/s
</span></code></pre></td></tr></table></div></figure>


<h3>メモリ量</h3>

<p>ワーキングセットの大きさから計算する。
ワーキングセットとは、ドキュメント取り扱い単位のこと。</p>

<p>stat()コマンドでワーキングセットの平均オブジェクトサイズや、最大サイズといった情報がとれる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&gt;</span> <span class="no">Model</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:collection</span><span class="p">)</span><span class="o">.</span><span class="n">stats</span>
</span><span class='line'><span class="no">MONGODB</span> <span class="n">db</span><span class="o">[</span><span class="s1">&#39;$cmd&#39;</span><span class="o">].</span><span class="n">find</span><span class="p">({</span><span class="ss">:collstats</span><span class="o">=&gt;</span><span class="s2">&quot;models&quot;</span><span class="p">})</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="s2">&quot;ns&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;db.models&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;size&quot;</span><span class="o">=&gt;</span><span class="mi">128</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;avgObjSize&quot;</span><span class="o">=&gt;</span><span class="mi">128</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span>
</span><span class='line'> <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>計算式の例</h2>

<p>ある会社での計算式の事例。</p>

<table>
<thead>
<tr>
<th></th>
<th> CPU    </th>
<th> Intel(R)Xeon(R) CPU X5650 2.67GHz <strong>1core</strong> </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> Memory </td>
<td> 4GB </td>
</tr>
<tr>
<td></td>
<td> Disk   </td>
<td> 50GB iSCSI </td>
</tr>
<tr>
<td></td>
<td> OS     </td>
<td> CentOS5.5 64bit </td>
</tr>
<tr>
<td></td>
<td> DBs    </td>
<td> mongodb 1.8.0 </td>
</tr>
<tr>
<td></td>
<td>        </td>
<td> - 5 Replica Set </td>
</tr>
<tr>
<td></td>
<td>        </td>
<td> - 1 Arbiter </td>
</tr>
</tbody>
</table>


<ul>
<li><p>Query per Second 4500.</p></li>
<li><p>GET : 4500×CPUs</p></li>
</ul>


<p>CPUごとに、まっすぐ線形に性能が伸びる様子。</p>

<ul>
<li>SET : 0.05×DDscore / Size</li>
</ul>


<p>ディスクIOの速度が直接影響する様子です。Replica Setのぶん、書き込み性能低下がある。</p>

<h2>100GB パフォーマンステスト結果</h2>

<p>およそ１００GBのデータ（2GBのチャンクが４８個）あるデータベースに対して、各操作のパフォーマンス計測。</p>

<table>
<thead>
<tr>
<th></th>
<th>                         </th>
<th align="right">        sec </th>
<th align="right">   hour  </th>
<th align="right"> docs/sec</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> Batch insert(1000 docs) </td>
<td align="right"> <strong>17,906</strong> </td>
<td align="right"> <strong>4.8</strong> </td>
<td align="right"> <strong>3358</strong></td>
</tr>
<tr>
<td></td>
<td>                         </td>
<td align="right">            </td>
<td align="right">         </td>
<td align="right"> </td>
</tr>
<tr>
<td></td>
<td> Ensure index(1000 docs) </td>
<td align="right">  <strong>4,049</strong> </td>
<td align="right"> <strong>1.1</strong> </td>
<td align="right"> </td>
</tr>
<tr>
<td></td>
<td>  - primary              </td>
<td align="right">      2,101 </td>
<td align="right">     0.6 </td>
<td></td>
</tr>
<tr>
<td></td>
<td>  - secondary            </td>
<td align="right">      1,948 </td>
<td align="right">     0.5 </td>
<td align="right"> </td>
</tr>
<tr>
<td></td>
<td>                         </td>
<td align="right">            </td>
<td align="right">         </td>
<td align="right"> </td>
</tr>
<tr>
<td></td>
<td> Add one Replica node    </td>
<td align="right">  <strong>5,833</strong> </td>
<td align="right"> <strong>1.6</strong> </td>
<td align="right">  </td>
</tr>
<tr>
<td></td>
<td>  - Get files 2GB×48     </td>
<td align="right">      2,120 </td>
<td align="right">     0.6 </td>
<td align="right">  </td>
</tr>
<tr>
<td></td>
<td>  - _id indexing         </td>
<td align="right">      1,406 </td>
<td align="right">     0.4 </td>
<td align="right">  </td>
</tr>
<tr>
<td></td>
<td>  - uniq indexing        </td>
<td align="right">      2,251 </td>
<td align="right">     0.6 </td>
<td align="right"> </td>
</tr>
<tr>
<td></td>
<td>  - &#8230;etc               </td>
<td align="right">         56 </td>
<td align="right">     0.0 </td>
<td align="right"> </td>
</tr>
</tbody>
</table>


<h2>Sharding効果</h2>

<p>MapReduceで、ShardKeyにヒットする検索メソッド実行と、全体スキャンの速度比較。</p>

<ul>
<li>およそ 8500倍の速度差。</li>
</ul>


<table>
<thead>
<tr>
<th></th>
<th>                            </th>
<th align="right">       sec </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> map reduce by unique       </td>
<td align="right">     0.368 </td>
</tr>
<tr>
<td></td>
<td> scan all data(39,092 keys) </td>
<td align="right"> 3,116.000</td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB_2012 管理者から見た弱点と対策]]></title>
    <link href="http://7korobi.github.com/blog/2012/01/20/mongodb-2012-attention-manage/"/>
    <updated>2012-01-20T16:05:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2012/01/20/mongodb-2012-attention-manage</id>
    <content type="html"><![CDATA[<h3>プライマリダウン発生時</h3>

<h4>多数決原理</h4>

<p>レプリケーションは、primaryを定める処理のため、ダウンするマシン側が少数派でなくてはならない。
同時にダウンしてもよい台数を1台までとするなら、最低3台でレプリケーションすること。</p>

<h4>Journal（受け付けた書き込み操作の記録）の取り扱い</h4>

<p>プライマリDBのJournalがセカンダリに配布されるまでの間、情報をプライマリだけが保持している期間がある。</p>

<h3>ディスク領域管理</h3>

<h4>updateを繰り返すとディスクスペースが膨らむ。</h4>

<p>updateによってドキュメントサイズが変化すると、情報の断片化によって未使用領域が増えていく。</p>

<h4>ロックしてしまう操作</h4>

<p>下のような操作は、データベースをロックして実行する。</p>

<p>→量にもよるが、数時間、Read,Write不可能になる。</p>

<ul>
<li>インデックス（primaryはノンブロックだが、secondaryでロック）</li>
<li>repair database</li>
<li>データコンパクション</li>
</ul>


<h4>ロックせずにデータフラグメント対策をするには</h4>

<p>下記の手順の紹介があった。</p>

<ul>
<li>replica setでMongoDBを運用</li>
<li>新規nodeを追加し、データを同期する。</li>
<li>（この新規ノードには、断片化していないデータが集まる。）</li>
<li>stepdown() コマンド発行。プライマリを引き継ぐ。（このとき数秒間、書き込みロックが発生。）</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB_2012 アプリから見た弱点と対策]]></title>
    <link href="http://7korobi.github.com/blog/2012/01/20/mongodb-2012-attention-app/"/>
    <updated>2012-01-20T16:05:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2012/01/20/mongodb-2012-attention-app</id>
    <content type="html"><![CDATA[<h3>トランザクション的な書込操作</h3>

<p>10gen社は、今後も含めそうした方向への投資をしない。
<strong>ameba pico</strong>、<strong>アニマルランド</strong>の事例のように、トランザクションを求めない設計をしてゆくと共に、どうしても必要だが高いスケーラビリティを求めはしない、という部分については、RDBMSを併用するなどしてそれぞれの長所を活かすとよい。</p>

<h3>non-block Write</h3>

<p>データの書き込みが完了するまで待たずにデータベースがスレッドを開放し、次の操作を受け付ける機能。
下記の点が指摘されている。</p>

<ul>
<li><p>プライマリDBへデータ送信が終わった後、Journalに入るまでのタイミングでDownした場合、情報が失われる。</p></li>
<li><p>バッチwrite処理中、secondary stale. となる可能性
　　プライマリDBが大量のwriteを処理しきれず、60secぶんのOPlogを使い果たすと発生する。</p></li>
</ul>


<p><a href="http://d.hatena.ne.jp/babie/searchdiary?word=safely">セーフモードで永続化を行う</a>と、これらの現象は発生しなくなる。</p>

<h3>chunk migration中のカウント</h3>

<p>chunk migration中に<a href="http://d.hatena.ne.jp/matsuou1/20110415/1302873577">count値がずれて表示される</a>現象。</p>

<p>（mongoDB2.0 までには対策なし。）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB_2012 スキーマデザイン]]></title>
    <link href="http://7korobi.github.com/blog/2012/01/20/mongodb-2012-schema-design/"/>
    <updated>2012-01-20T16:02:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2012/01/20/mongodb-2012-schema-design</id>
    <content type="html"><![CDATA[<h2>ドキュメント設計（テーブル設計）</h2>

<p><a href="http://mongoid.org/docs/relations.html">Mongoid</a>を使いましょう。
embeddedオブジェクトは高速ですが、引き換えに総浚い検索がやりづらくなります。
用途の違いをわきまえて embeds / references を使い分けましょう。</p>

<p>また、関連データ（別ドキュメントのIDを保管するフィールド）の整合を保つため、モデルを使ってアクセスしましょう。</p>

<h3>参考</h3>

<ul>
<li><a href="http://d.hatena.ne.jp/babie/20100809/1281316974">リレーショナルな関連</a></li>
<li><a href="http://d.hatena.ne.jp/masa_w/20101130/1291084939">スキーマ設計</a></li>
<li><a href="http://d.hatena.ne.jp/babie/20100809/1281316971">Mongoid 詳解</a></li>
</ul>


<p>ここでは、上記リンク先の内容には触れず、セミナーで紹介されたちょっとしたtipsのみお伝えします。</p>

<h3>他、こまかいテクニック</h3>

<p>補助的なレコードを付与して、高速でスマートなQueryingを行うための工夫について</p>

<ul>
<li>Tree
コメントにリプライが可能、などの、親子関係が継ぎ足されている構造です。
rootまでの祖先を辿れるよう、配列に保管しましょう。（配列データを扱える強み）</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">field</span> <span class="ss">:ancestors</span><span class="p">,</span> <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="nb">Array</span>
</span><span class='line'><span class="c1"># ancestors: [root_id, parent_id, self]</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>更新の衝突
複数のThreadが、それぞれ同一のデータをクエリして、更新操作を行ってしまうケースがあります。
こうした問題を避けるため、タイムスタンプや番号でバージョンを把握し、異なるバージョンには保存しないようにしましょう。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&gt;</span> <span class="vi">@model</span> <span class="o">=</span> <span class="no">Model</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s1">&#39;mongo_master&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> <span class="no">Model</span><span class="o">.</span><span class="n">where</span><span class="p">(</span>
</span><span class='line'>    <span class="ss">:_id</span> <span class="o">=&gt;</span> <span class="vi">@model</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="ss">:version</span> <span class="o">=&gt;</span> <span class="vi">@model</span><span class="o">.</span><span class="n">version</span>
</span><span class='line'>  <span class="p">)</span><span class="o">.</span><span class="n">update</span><span class="p">(</span>
</span><span class='line'>    <span class="ss">:data</span> <span class="o">=&gt;</span> <span class="s1">&#39;value&#39;</span><span class="p">,</span>  <span class="ss">:version</span> <span class="o">=&gt;</span> <span class="vi">@model</span><span class="o">.</span><span class="n">version</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>  <span class="p">)</span>
</span><span class='line'><span class="no">MONGODB</span> <span class="n">db</span><span class="o">[</span><span class="s1">&#39;models&#39;</span><span class="o">].</span><span class="n">find</span><span class="p">({{</span><span class="s2">&quot;_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;mongo_master&quot;</span><span class="p">})</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="no">MONGODB</span> <span class="n">db</span><span class="o">[</span><span class="s1">&#39;models&#39;</span><span class="o">].</span><span class="n">update</span><span class="p">(</span>
</span><span class='line'>  <span class="p">{</span><span class="s2">&quot;_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;mongo_master&quot;</span><span class="p">,</span> <span class="s2">&quot;version&quot;</span><span class="o">=&gt;</span><span class="mi">2</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="s2">&quot;$set&quot;</span><span class="o">=&gt;</span><span class="p">{</span><span class="ss">:data</span><span class="o">=&gt;</span><span class="s2">&quot;value&quot;</span><span class="p">,</span> <span class="ss">:version</span><span class="o">=&gt;</span><span class="mi">3</span><span class="p">}}</span>
</span><span class='line'><span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="mi">194</span>
</span></code></pre></td></tr></table></div></figure>


<p>また、もう一歩進めて、バージョン管理を導入するのもよいでしょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="kp">include</span> <span class="no">Mongoid</span><span class="o">::</span><span class="no">Versioning</span>
</span></code></pre></td></tr></table></div></figure>


<h2>single table inheritance</h2>

<p>異なるクラスの情報をひとつのテーブルに同居させることです。
こんなモデルがあったとして。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Shape</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Circle</span> <span class="o">&lt;</span> <span class="no">Shape</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Square</span> <span class="o">&lt;</span> <span class="no">Shape</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Rect</span>   <span class="o">&lt;</span> <span class="no">Shape</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>(RDBの場合)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">|</span><span class="nb">id</span><span class="o">|</span><span class="n">type</span>   <span class="o">|</span> <span class="n">area</span><span class="o">|</span> <span class="n">radius</span><span class="o">|</span> <span class="n">length</span><span class="o">|</span> <span class="n">width</span><span class="o">|</span>
</span><span class='line'><span class="o">|--|-------|-----|-------|-------|------|</span>
</span><span class='line'><span class="o">|</span> <span class="mi">1</span><span class="o">|</span><span class="n">circle</span> <span class="o">|</span> <span class="mi">3</span><span class="o">.</span><span class="mi">14</span><span class="o">|</span>      <span class="mi">1</span><span class="o">|</span> <span class="p">(</span><span class="n">null</span><span class="p">)</span><span class="o">|</span><span class="p">(</span><span class="n">null</span><span class="p">)</span><span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="mi">2</span><span class="o">|</span><span class="n">square</span> <span class="o">|</span>    <span class="mi">4</span><span class="o">|</span> <span class="p">(</span><span class="n">null</span><span class="p">)</span><span class="o">|</span>      <span class="mi">2</span><span class="o">|</span><span class="p">(</span><span class="n">null</span><span class="p">)</span><span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="mi">3</span><span class="o">|</span><span class="n">rect</span>   <span class="o">|</span>   <span class="mi">10</span><span class="o">|</span> <span class="p">(</span><span class="n">null</span><span class="p">)</span><span class="o">|</span>      <span class="mi">5</span><span class="o">|</span>     <span class="mi">2</span><span class="o">|</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>MongoDB</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span><span class="nx">_id</span><span class="o">:</span><span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="nx">type</span><span class="o">:</span><span class="s2">&quot;circle&quot;</span><span class="p">,</span> <span class="nx">area</span><span class="o">:</span><span class="mf">3.14</span><span class="p">,</span> <span class="nx">radius</span><span class="o">:</span><span class="mi">1</span><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="nx">_id</span><span class="o">:</span><span class="s2">&quot;2&quot;</span><span class="p">,</span> <span class="nx">type</span><span class="o">:</span><span class="s2">&quot;square&quot;</span><span class="p">,</span> <span class="nx">area</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span> <span class="nx">length</span><span class="o">:</span><span class="mi">2</span><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="nx">_id</span><span class="o">:</span><span class="s2">&quot;3&quot;</span><span class="p">,</span> <span class="nx">type</span><span class="o">:</span><span class="s2">&quot;rect&quot;</span><span class="p">,</span>   <span class="nx">area</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span> <span class="nx">length</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span> <span class="nx">width</span><span class="o">:</span><span class="mi">2</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sinatra]]></title>
    <link href="http://7korobi.github.com/blog/2011/12/15/sinatra/"/>
    <updated>2011-12-15T12:38:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2011/12/15/sinatra</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[formtastic]]></title>
    <link href="http://7korobi.github.com/blog/2011/12/11/formtastic/"/>
    <updated>2011-12-11T01:25:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2011/12/11/formtastic</id>
    <content type="html"><![CDATA[<p>Formtasticというプラグインはなかなか便利です。
モデルの変更にあわせて自動でフォームの項目を調節してくれる、inputsというメソッドが最高にありがたい。</p>

<p>…ですが、これ、ActiveRecordには対応しているんですが、MongoDBだと動かないんですね。
他の変更も含め、Gemに固めてやろうといろいろ模索していますが、とりあえず最低限なにが必要なのかを覚書き。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Mongoid</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Document</span>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>      <span class="k">def</span> <span class="nc">base</span><span class="o">.</span><span class="nf">field</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>        <span class="k">super</span>
</span><span class='line'>        <span class="err">記録を取る</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">def</span> <span class="nc">base</span><span class="o">.</span><span class="nf">referenced_in</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>        <span class="k">super</span>
</span><span class='line'>        <span class="err">記録を取る</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">def</span> <span class="nc">base</span><span class="o">.</span><span class="nf">references_many</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>        <span class="k">super</span>
</span><span class='line'>        <span class="err">記録を取る</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">def</span> <span class="nc">base</span><span class="o">.</span><span class="nf">embedded_in</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>        <span class="k">super</span>
</span><span class='line'>        <span class="err">記録を取る</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">def</span> <span class="nc">base</span><span class="o">.</span><span class="nf">embeds_many</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>        <span class="k">super</span>
</span><span class='line'>        <span class="err">記録を取る</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">def</span> <span class="nc">base</span><span class="o">.</span><span class="nf">references_and_referenced_in_many</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>        <span class="k">super</span>
</span><span class='line'>        <span class="err">記録を取る</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">base</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>        <span class="k">def</span> <span class="nf">column_for_attribute</span><span class="p">(</span><span class="n">attribute_name</span><span class="p">)</span>
</span><span class='line'>          <span class="err">なんとかする</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">def</span> <span class="nc">base</span><span class="o">.</span><span class="nf">content_columns</span>
</span><span class='line'>        <span class="err">なんとかする</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">def</span> <span class="nc">base</span><span class="o">.</span><span class="nf">reflections</span>
</span><span class='line'>        <span class="n">relations</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Formtastic</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Inputs</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">ArrayInput</span>
</span><span class='line'>      <span class="kp">include</span> <span class="no">Base</span>
</span><span class='line'>      <span class="kp">include</span> <span class="no">Base</span><span class="o">::</span><span class="no">Stringish</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">def</span> <span class="nf">to_html</span>
</span><span class='line'>        <span class="vi">@object</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">exp</span><span class="o">|</span>
</span><span class='line'>          <span class="n">input_wrapping</span> <span class="k">do</span>
</span><span class='line'>            <span class="n">label_html</span> <span class="o">&lt;&lt;</span>
</span><span class='line'>            <span class="err">どうにかする</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Formtastic</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Helpers</span>
</span><span class='line'>    <span class="k">module</span> <span class="nn">InputHelper</span>
</span><span class='line'>      <span class="kp">protected</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">default_input_type</span><span class="p">(</span><span class="nb">method</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>        <span class="err">大幅に書き換え。</span>
</span><span class='line'>        <span class="no">ActiveRecord</span><span class="err">ではありえないような、</span>
</span><span class='line'>        <span class="nb">Array</span><span class="err">型などの入力用フォームに対応する。</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>けっこう長い！</p>

<p>実際にはもちろん、メソッド定義の中身も必要です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[module]]></title>
    <link href="http://7korobi.github.com/blog/2011/12/08/module/"/>
    <updated>2011-12-08T17:16:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2011/12/08/module</id>
    <content type="html"><![CDATA[<p>一列目<br />
<div class='bogus-wrapper'><figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">A</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">a</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">A</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">B</span>
</span><span class='line'>  <span class="kp">include</span> <span class="n">A</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">C</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="n">A</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></div></p>
<p>二列目<br />
<div class='bogus-wrapper'><figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">A</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">a</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">A</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="kp">module_function</span> <span class="ss">:a</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">B</span>
</span><span class='line'>  <span class="kp">include</span> <span class="n">A</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">C</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="n">A</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></div></p>
<p>三列目<br />
<div class='bogus-wrapper'><figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">A</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">a</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">A</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">B</span>
</span><span class='line'>  <span class="kp">include</span> <span class="n">A</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">C</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="n">A</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></div></p>
<table>
	<tr>
		<td colspan="2">書いたソースコード    </td>
		<th>一列目</th>
		<th>二列目</th>
		<th>三列目</th>
	</tr>
	<tr>
		<th>Aのモジュール関数       </th>
		<th>A.a           </th>
		<td style="text-align:center;">×</td>
		<td style="text-align:center;">○</td>
		<td style="text-align:center;">○</td>
	</tr>
	<tr>
		<th>Aの定数               </th>
		<th>A::A           </th>
		<td style="text-align:center;">○</td>
		<td style="text-align:center;">○</td>
		<td style="text-align:center;">○</td>
	</tr>
	<tr>
		<th>Bの特異メソッド(private)</th>
		<th>B.send(:a)    </th>
		<td style="text-align:center;">×</td>
		<td style="text-align:center;">×</td>
		<td style="text-align:center;">×</td>
	</tr>
	<tr>
		<th>Bの特異メソッド         </th>
		<th>B.a           </th>
		<td style="text-align:center;">×</td>
		<td style="text-align:center;">×</td>
		<td style="text-align:center;">×</td>
	</tr>
	<tr>
		<th>Bのメソッド(private)   </th>
		<th>B.new.send(:a)</th>
		<td style="text-align:center;">○</td>
		<td style="text-align:center;">○</td>
		<td style="text-align:center;">×</td>
	</tr>
	<tr>
		<th>Bのメソッド            </th>
		<th>B.new.a       </th>
		<td style="text-align:center;">○</td>
		<td style="text-align:center;">×</td>
		<td style="text-align:center;">×</td>
	</tr>
	<tr>
		<th>Bの定数               </th>
		<th>B::A           </th>
		<td style="text-align:center;">○</td>
		<td style="text-align:center;">○</td>
		<td style="text-align:center;">○</td>
	</tr>
	<tr>
		<th>Cの特異メソッド(private)</th>
		<th>C.send(:a)    </th>
		<td style="text-align:center;">○</td>
		<td style="text-align:center;">○</td>
		<td style="text-align:center;">×</td>
	</tr>
	<tr>
		<th>Cの特異メソッド         </th>
		<th>C.a           </th>
		<td style="text-align:center;">×</td>
		<td style="text-align:center;">○</td>
		<td style="text-align:center;">×</td>
	</tr>
	<tr>
		<th>Cのメソッド(private)   </th>
		<th>C.new.send(:a)</th>
		<td style="text-align:center;">×</td>
		<td style="text-align:center;">○</td>
		<td style="text-align:center;">×</td>
	</tr>
	<tr>
		<th>Cのメソッド            </th>
		<th>C.new.a       </th>
		<td style="text-align:center;">×</td>
		<td style="text-align:center;">×</td>
		<td style="text-align:center;">×</td>
	</tr>
	<tr>
		<th>Cの定数               </th>
		<th>C::A           </th>
		<td style="text-align:center;">×</td>
		<td style="text-align:center;">×</td>
		<td style="text-align:center;">×</td>
	</tr>
</table>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB Update 治った]]></title>
    <link href="http://7korobi.github.com/blog/2011/12/07/mongodb-update/"/>
    <updated>2011-12-07T20:12:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2011/12/07/mongodb-update</id>
    <content type="html"><![CDATA[<p>治りました。
MongoDBでは、データ構造がおかしい場合、アップデートを受け付けなくなることがあるようです。</p>

<p>状況のおさらい
- update.$push しても要素が変化しない。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">MONGODB</span> <span class="n">giji</span><span class="o">[</span><span class="s1">&#39;chr_sets&#39;</span><span class="o">].</span><span class="n">find</span><span class="p">({</span><span class="ss">:_id</span><span class="o">=&gt;</span><span class="s2">&quot;sf&quot;</span><span class="p">})</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="p">{</span><span class="s2">&quot;_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;sf&quot;</span><span class="p">,</span> <span class="s2">&quot;chr_jobs&quot;</span><span class="o">=&gt;[.</span><span class="n">.</span><span class="o">.</span><span class="mi">10</span> <span class="n">elements</span><span class="o">.</span><span class="n">.</span><span class="o">.]</span><span class="p">,</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="no">MONGODB</span> <span class="n">giji</span><span class="o">[</span><span class="s1">&#39;chr_sets&#39;</span><span class="o">].</span><span class="n">update</span><span class="p">({</span><span class="s2">&quot;_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;sf&quot;</span><span class="p">},</span> <span class="p">{</span><span class="s2">&quot;$push&quot;</span><span class="o">=&gt;</span><span class="p">{</span><span class="s2">&quot;chr_jobs&quot;</span><span class="o">=&gt;</span><span class="p">{</span><span class="s2">&quot;job&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;test&quot;</span><span class="p">,</span> <span class="s2">&quot;face_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;test&quot;</span><span class="p">,</span> <span class="s2">&quot;_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;test&quot;</span><span class="p">}}})</span>
</span><span class='line'><span class="no">MONGODB</span> <span class="n">giji</span><span class="o">[</span><span class="s1">&#39;chr_sets&#39;</span><span class="o">].</span><span class="n">update</span><span class="p">({</span><span class="ss">:_id</span><span class="o">=&gt;</span><span class="s2">&quot;sf&quot;</span><span class="p">},</span> <span class="p">{</span><span class="s2">&quot;$push&quot;</span><span class="o">=&gt;</span><span class="p">{</span><span class="s2">&quot;chr_jobs&quot;</span><span class="o">=&gt;</span><span class="p">{</span><span class="s2">&quot;job&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;test&quot;</span><span class="p">,</span> <span class="s2">&quot;face_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;test&quot;</span><span class="p">,</span> <span class="s2">&quot;_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;test&quot;</span><span class="p">}}})</span>
</span><span class='line'>
</span><span class='line'><span class="no">MONGODB</span> <span class="n">giji</span><span class="o">[</span><span class="s1">&#39;chr_sets&#39;</span><span class="o">].</span><span class="n">find</span><span class="p">({</span><span class="ss">:_id</span><span class="o">=&gt;</span><span class="s2">&quot;sf&quot;</span><span class="p">})</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="o">[[</span><span class="ss">:chr_set_id</span><span class="p">,</span> <span class="ss">:asc</span><span class="o">]]</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="p">{</span><span class="s2">&quot;_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;sf&quot;</span><span class="p">,</span> <span class="s2">&quot;chr_jobs&quot;</span><span class="o">=&gt;[.</span><span class="n">.</span><span class="o">.</span><span class="mi">10</span> <span class="n">elements</span><span class="o">.</span><span class="n">.</span><span class="o">.]</span><span class="p">,</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>このときのデータ構造が問題でした。こんなのだったんですが（見やすくするため、yaml形式にしています。）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="s">&#39;&#39;</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">csid</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sf_sf10</span>
</span><span class='line'><span class="l-Scalar-Plain">_id</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sf</span>
</span><span class='line'><span class="l-Scalar-Plain">admin</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">黒体放射のエヴェレット解釈</span>
</span><span class='line'><span class="l-Scalar-Plain">chr_set_id</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sf</span>
</span><span class='line'><span class="l-Scalar-Plain">maker</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">重ね合せ猫のユニタリ変換</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">chr_jobs</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">face_id</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sf01</span>
</span><span class='line'>  <span class="l-Scalar-Plain">job</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">通信士</span>
</span><span class='line'>  <span class="l-Scalar-Plain">_id</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sf01</span>
</span><span class='line'><span class="l-Scalar-Plain">...(9 items)</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">chr_npcs</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">caption</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">明後日への道標</span>
</span><span class='line'>  <span class="l-Scalar-Plain">face_id</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sf04</span>
</span><span class='line'>  <span class="l-Scalar-Plain">npc</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="kt">!</span> <span class="s">&#39;とたたたたんっ。&lt;br&gt;&lt;br&gt;&lt;b&gt;めざましい速さで木の洞に駆け込むと、じっと潜んだ暗闇に瞳がふたつ。&lt;br&gt;いちど大好きな閉所に収まると、そうかんたんに出てはこないのだ。&lt;/b&gt;</span><span class="nv"> </span><span class="s">&#39;</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="kt">!</span> <span class="s">&#39;ちゅー！&lt;br&gt;&lt;br&gt;　ちゅー！&lt;br&gt;&lt;br&gt;&lt;b&gt;がりがり、がりがり。ケージの縁をひっかくと、うろうろ、うろうろ右へ左へ駆け回る。木の洞に目もくれず、夜中じゅう走り続けるのだった……&lt;/b&gt;</span><span class="nv"> </span><span class="s">&#39;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">_id</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sf04</span>
</span><span class='line'>  <span class="l-Scalar-Plain">csid</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sf</span>
</span><span class='line'>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">caption</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">明後日への道標（ナユタ）</span>
</span><span class='line'>  <span class="l-Scalar-Plain">face_id</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sf10</span>
</span><span class='line'>  <span class="l-Scalar-Plain">npc</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="kt">!</span> <span class="s">&#39;とたたたたんっ。&lt;br&gt;&lt;br&gt;&lt;b&gt;めざましい速さで木の洞に駆け込むと、じっと潜んだ暗闇に瞳がふたつ。&lt;br&gt;いちど大好きな閉所に収まると、そうかんたんに出てはこないのだ。&lt;/b&gt;</span><span class="nv"> </span><span class="s">&#39;</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="kt">!</span> <span class="s">&#39;ちゅー！&lt;br&gt;&lt;br&gt;　ちゅー！&lt;br&gt;&lt;br&gt;&lt;b&gt;がりがり、がりがり。ケージの縁をひっかくと、うろうろ、うろうろ右へ左へ駆け回る。木の洞に目もくれず、夜中じゅう走り続けるのだった……&lt;/b&gt;</span><span class="nv"> </span><span class="s">&#39;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">_id</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sf10</span>
</span></code></pre></td></tr></table></div></figure>


<p>これを、こうする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">_id</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sf</span>
</span><span class='line'><span class="l-Scalar-Plain">admin</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">黒体放射のエヴェレット解釈</span>
</span><span class='line'><span class="l-Scalar-Plain">chr_set_id</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sf</span>
</span><span class='line'><span class="l-Scalar-Plain">maker</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">重ね合せ猫のユニタリ変換</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">chr_jobs</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">...(後略)</span>
</span></code></pre></td></tr></table></div></figure>


<p>再度、試してみると…</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mo">063</span><span class="p">:</span><span class="mi">0</span><span class="o">&gt;</span> <span class="no">ChrSet</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s1">&#39;sf&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">chr_jobs</span> <span class="o">&lt;&lt;</span> <span class="no">ChrJob</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">job</span><span class="ss">:&#39;test&#39;</span><span class="p">,</span> <span class="n">face_id</span><span class="ss">:&#39;test&#39;</span><span class="p">)</span>
</span><span class='line'><span class="no">MONGODB</span> <span class="n">giji</span><span class="o">[</span><span class="s1">&#39;chr_sets&#39;</span><span class="o">].</span><span class="n">find</span><span class="p">({</span><span class="ss">:_id</span><span class="o">=&gt;</span><span class="s2">&quot;sf&quot;</span><span class="p">})</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="o">[[</span><span class="ss">:chr_set_id</span><span class="p">,</span> <span class="ss">:asc</span><span class="o">]]</span><span class="p">)</span>
</span><span class='line'><span class="no">MONGODB</span> <span class="n">giji</span><span class="o">[</span><span class="s1">&#39;chr_sets&#39;</span><span class="o">].</span><span class="n">update</span><span class="p">({</span><span class="s2">&quot;_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;sf&quot;</span><span class="p">},</span> <span class="p">{</span><span class="s2">&quot;$pushAll&quot;</span><span class="o">=&gt;</span><span class="p">{</span><span class="s2">&quot;chr_jobs&quot;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="s2">&quot;job&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;test&quot;</span><span class="p">,</span> <span class="s2">&quot;face_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;test&quot;</span><span class="p">,</span> <span class="s2">&quot;_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;test&quot;</span><span class="p">}</span><span class="o">]</span><span class="p">}})</span>
</span><span class='line'>
</span><span class='line'><span class="no">MONGODB</span> <span class="n">giji</span><span class="o">[</span><span class="s1">&#39;chr_sets&#39;</span><span class="o">].</span><span class="n">find</span><span class="p">({</span><span class="ss">:_id</span><span class="o">=&gt;</span><span class="s2">&quot;sf&quot;</span><span class="p">})</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="o">[[</span><span class="ss">:chr_set_id</span><span class="p">,</span> <span class="ss">:asc</span><span class="o">]]</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[.</span><span class="n">.</span><span class="o">.</span><span class="mi">10</span> <span class="n">elements</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">,</span> <span class="c1">#&lt;ChrJob _id: test, _type: nil, job: &quot;test&quot;, face_id: &quot;test&quot;&gt;]</span>
</span></code></pre></td></tr></table></div></figure>


<p>増えた！</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mo">076</span><span class="p">:</span><span class="mi">0</span><span class="o">&gt;</span> <span class="no">ChrSet</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s1">&#39;sf&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">chr_jobs</span><span class="o">.</span><span class="n">pop</span><span class="o">.</span><span class="n">delete</span>
</span><span class='line'><span class="no">MONGODB</span> <span class="n">giji</span><span class="o">[</span><span class="s1">&#39;chr_sets&#39;</span><span class="o">].</span><span class="n">find</span><span class="p">({</span><span class="ss">:_id</span><span class="o">=&gt;</span><span class="s2">&quot;sf&quot;</span><span class="p">})</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="o">[[</span><span class="ss">:chr_set_id</span><span class="p">,</span> <span class="ss">:asc</span><span class="o">]]</span><span class="p">)</span>
</span><span class='line'><span class="no">MONGODB</span> <span class="n">giji</span><span class="o">[</span><span class="s1">&#39;chr_sets&#39;</span><span class="o">].</span><span class="n">update</span><span class="p">({</span><span class="s2">&quot;_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;sf&quot;</span><span class="p">},</span> <span class="p">{</span><span class="s2">&quot;$pull&quot;</span><span class="o">=&gt;</span><span class="p">{</span><span class="s2">&quot;chr_jobs&quot;</span><span class="o">=&gt;</span><span class="p">{</span><span class="s2">&quot;_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;test&quot;</span><span class="p">}}})</span>
</span><span class='line'>
</span><span class='line'><span class="no">MONGODB</span> <span class="n">giji</span><span class="o">[</span><span class="s1">&#39;chr_sets&#39;</span><span class="o">].</span><span class="n">find</span><span class="p">({</span><span class="ss">:_id</span><span class="o">=&gt;</span><span class="s2">&quot;sf&quot;</span><span class="p">})</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="o">[[</span><span class="ss">:chr_set_id</span><span class="p">,</span> <span class="ss">:asc</span><span class="o">]]</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[.</span><span class="n">.</span><span class="o">.</span><span class="mi">10</span> <span class="n">elements</span><span class="o">.</span><span class="n">.</span><span class="o">.]</span>
</span></code></pre></td></tr></table></div></figure>


<p>消せた！</p>

<p>と、いう顛末のようでした。キーに空文字を含むようなドキュメントが、この現象を引き起こしていたようです。</p>

<p>せっせと修正…。ドキュメントを削除して、修正版を挿入しなおすドキドキ作業。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">ChrSet</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">o</span><span class="o">|</span> <span class="n">o</span><span class="o">.</span><span class="n">attributes</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">);</span> <span class="n">o</span><span class="o">.</span><span class="n">delete</span><span class="p">;</span> <span class="no">ChrSet</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">o</span><span class="o">.</span><span class="n">attributes</span><span class="p">)</span><span class="o">.</span><span class="n">save</span><span class="p">;</span> <span class="nb">p</span> <span class="n">o</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB update 失敗]]></title>
    <link href="http://7korobi.github.com/blog/2011/12/05/mongodb-update/"/>
    <updated>2011-12-05T22:00:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2011/12/05/mongodb-update</id>
    <content type="html"><![CDATA[<p>Ruby on Rails3を楽しく使っていたんだけれど・・・。</p>

<p>Mongoidから、embeddedオブジェクトを追加すると、いっけん動作しているように見えてデータベースに格納されない。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">ChrSet</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s1">&#39;animal&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">chr_jobs</span> <span class="o">&lt;&lt;</span> <span class="no">ChrJob</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">job</span><span class="ss">:&#39;z&#39;</span><span class="p">,</span><span class="n">face_id</span><span class="ss">:&#39;z&#39;</span><span class="p">)</span>
</span><span class='line'><span class="no">MONGODB</span> <span class="n">giji</span><span class="o">[</span><span class="s1">&#39;chr_sets&#39;</span><span class="o">].</span><span class="n">find</span><span class="p">({</span><span class="ss">:_id</span><span class="o">=&gt;</span><span class="s2">&quot;animal&quot;</span><span class="p">})</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="o">[[</span><span class="ss">:chr_set_id</span><span class="p">,</span> <span class="ss">:asc</span><span class="o">]]</span><span class="p">)</span>
</span><span class='line'><span class="no">MONGODB</span> <span class="n">giji</span><span class="o">[</span><span class="s1">&#39;chr_sets&#39;</span><span class="o">].</span><span class="n">update</span><span class="p">({</span><span class="s2">&quot;_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;animal&quot;</span><span class="p">},</span> <span class="p">{</span><span class="s2">&quot;$pushAll&quot;</span><span class="o">=&gt;</span><span class="p">{</span><span class="s2">&quot;chr_jobs&quot;</span><span class="o">=&gt;[</span><span class="p">{</span><span class="s2">&quot;job&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;z&quot;</span><span class="p">,</span> <span class="s2">&quot;face_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;z&quot;</span><span class="p">,</span> <span class="s2">&quot;_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;z&quot;</span><span class="p">}</span><span class="o">]</span><span class="p">}})</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[</span><span class="c1">#&lt;ChrJob _id: z, _type: nil, job: &quot;z&quot;, face_id: &quot;z&quot;&gt;]</span>
</span></code></pre></td></tr></table></div></figure>


<p>こんなふうに、MongoDB上はupdate.$pushAllという扱いをしているみたいなのだけれどなあ。</p>

<p>苦肉の策でオブジェクトを２つつくり、片方を削除、もう片方を更新してから保存すると、保存される。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">MONGODB</span> <span class="n">giji</span><span class="o">[</span><span class="s1">&#39;chr_sets&#39;</span><span class="o">].</span><span class="n">insert</span><span class="p">(</span><span class="o">[</span><span class="p">{</span><span class="s2">&quot;&quot;</span><span class="o">=&gt;</span><span class="p">{</span><span class="s2">&quot;csid&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;animal&quot;</span><span class="p">},</span> <span class="s2">&quot;admin&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;大地の震動&quot;</span><span class="p">,</span> <span class="s2">&quot;chr_jobs&quot;</span><span class="o">=&gt;[.</span><span class="n">.</span><span class="o">.]</span><span class="p">,</span> <span class="s2">&quot;chr_npcs&quot;</span><span class="o">=&gt;[.</span><span class="n">.</span><span class="o">.]</span><span class="p">,</span> <span class="s2">&quot;chr_set_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;animal&quot;</span><span class="p">,</span> <span class="s2">&quot;maker&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;草原のざわめき&quot;</span><span class="p">,</span> <span class="s2">&quot;_id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;animal&quot;</span><span class="p">}</span><span class="o">]</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>つまり、insertはできるが、updateはできない。</p>

<p>そういう症状になっていることになるんだけれど・・・なんでだ？
謎が解けない</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Blog]]></title>
    <link href="http://7korobi.github.com/blog/2011/12/04/new-blog/"/>
    <updated>2011-12-04T21:00:00+09:00</updated>
    <id>http://7korobi.github.com/blog/2011/12/04/new-blog</id>
    <content type="html"><![CDATA[<p>書き溜める場所にしようっと。</p>

<p>h2.準備</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'><span class="nb">cd </span>octopress
</span><span class='line'>
</span><span class='line'>github -&gt; new repository
</span><span class='line'>  name: 7korobi.github.com
</span><span class='line'>  url:  7korobi.github.com
</span><span class='line'>
</span><span class='line'>rake setup_github_pages
</span><span class='line'>git@github.com:7korobi/7korobi.github.com.git
</span></code></pre></td></tr></table></div></figure>


<p>h2.記事作りから公開まで</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake new_post<span class="o">[</span><span class="s2">&quot;New Blog&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>vi <span class="nb">source</span>/_posts/2011-12-05-new-blog.markdown
</span><span class='line'>
</span><span class='line'>vi _config.yml
</span><span class='line'>
</span><span class='line'>rake preview
</span><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://gist.github.com/1438677">markdown記法</a></li>
<li><a href="http://redmine.jp/tech_note/textile">textile記法</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
